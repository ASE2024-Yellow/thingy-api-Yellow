

openapi: '3.0.3'
tags:
  - name: User
  - name: Thingy
info:
  title: API Title
  version: '1.0'
servers:
  - url: https://api.server.test/v1
paths:

  /things:
    get:
      summary: Get all things
      tags:
        - Thingy
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of things
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    isAvailable:
                      type: boolean
                    description:
                      type: string
        '401':
          description: Unauthorized
  /things/{thingyId}/bind:
    post:
      summary: Bind a thingy to user account
      tags:
        - Thingy
      parameters:
        - name: thingyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Thingy bound successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  thingy:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      isAvailable:
                        type: boolean
        '401':
          description: Unauthorized
        '404':
          description: Thingy not found
  /things/{thingyId}/unbind:
    delete:
      summary: Unbind a thingy from user account
      tags:
        - Thingy
      parameters:
        - name: thingyId
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Thingy unbound successfully
        '401':
          description: Unauthorized
        '404':
          description: Thingy not found
  /things/sensorData/{sensorType}:
    get:
      summary: Get sensor data from bound thingy
      tags:
        - Thingy
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: sensorType
          in: path
          required: true
          schema:
            type: string
            enum:
              - humidity
              - temperature
              - pressure
              - other
        - name: startTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: endTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Sensor data retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: date-time
                    value:
                      type: number
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Thingy not found
  /user/transportType:
    get:
      summary: Get user transport type
      tags:
        - User
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Transport type retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  transportType:
                    $ref: '#/components/schemas/TransportType'
        '401':
          description: Unauthorized
        '404':
          description: User not found
    patch:
      summary: Change user transport type
      tags:
        - User
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transportType:
                  $ref: '#/components/schemas/TransportType'
              required:
                - transportType
      responses:
        '200':
          description: Transport type updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  username:
                    type: string
                  email:
                    type: string
                  transportType:
                    $ref: '#/components/schemas/TransportType'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: User not found
  /user/profile:
    get:
      summary: Get user profile
      tags:
        - User
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  username:
                    type: string
                  email:
                    type: string
                  transportType:
                    $ref: '#/components/schemas/TransportType'
        '401':
          description: Unauthorized
        '404':
          description: User not found
    patch:
      summary: Modify user profile
      tags:
        - User
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
                transportType:
                  $ref: '#/components/schemas/TransportType'
              required:
                - username
                - email
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  username:
                    type: string
                  email:
                    type: string
                  transportType:
                    $ref: '#/components/schemas/TransportType'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: User not found
  /user/delete:
    delete:
      summary: Delete user account
      tags:
        - User
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Account deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: User not found
  /user/signin:
    post:
      summary: User login
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Unauthorized
  /user/signup:
    post:
      summary: User registration
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
                transportType:
                  $ref: '#/components/schemas/TransportType'
              required:
                - username
                - password
                - email
      responses:
        '201':
          description: Successful registration
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  username:
                    type: string
                  email:
                    type: string
                  transportType:
                    $ref: '#/components/schemas/TransportType'
        '400':
          description: Bad request
  /logout:
    post:
      summary: User logout
      tags:
        - User
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful logout
        '401':
          description: Unauthorized
  /users:
    get:
      summary: Get all users
      tags:
        - User
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    username:
                      type: string
                    email:
                      type: string
                    transportType:
                      $ref: '#/components/schemas/TransportType'
        '401':
          description: Unauthorized
    

components:
  schemas:
    TransportType:
      type: string
      enum:
      - bike
      - wheelchair
      - car
      - bus
      - train
      - other
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
        transportType:
          $ref: '#/components/schemas/TransportType'
    Thingy:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        isAvailable:
          type: boolean
        description:
          type: string